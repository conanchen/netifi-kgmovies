"""An object with an ID"""
interface Node {
    """
    The id of the thing.
    The id: ID! in Thing means that an auto-generated ID by Dgraph will be used to identify things.
    """
    id: ID!
}

"""
A Thing with an ID，在KGIS平台内所有内容都是东西Thing,也就是资源Resource
"""
interface Thing {

    """
    资源对象所属的namespaces
    """
    namespaces:  [Namespace!]

    """
    【标识符】 标识符 The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc.
    """
    identifier: String

    """
    【名称】name    Text    The name of the item.
    """
    name: String! @search(by: [hash])

    """
    【别名】 该项的别名。 An alias for the item.
    """
    alternateName: String

    """【描述】 该项的一个简单描述。 A description of the item."""
    description: String

}

"""
可购物：可以购买订购的产品或服务Product，Service
"""
interface Shoppingable{
    """可以购买订购的产品或服务Product，Service"""
    isShoppingable: Boolean
}

"""
Party 团体:代表有行动能力的个人或组织
"""
interface Party{
    """
    【拥有】 组织或个人拥有的产品 逆属性 Ownable.ownedBy，Products owned by the organization or person.
    """
    owns: [Ownership]

    """
    拥有的namespace
    """
    hasNamespaces: [Namespace!]

}

"""
【机构】一个组织，例如学校、非政府组织、公司、俱乐部等,也可用于临时几个人组成的聊天小组，房间
"""
interface Organization {

    """
    【上级组织】 subOrganization的反向属性，即包含这个组织的更大组织
    """
    parentOrganization: [Organization]

    """
    【子机构】 两个组织之间的关系。其中第二个组织，例如以子公司的名字，属于第一个组织。
    """
    subOrganizations: [Organization]

    """
    【部门】 组织与该组织某个部门之间的关系，也被描述成组织（允许不同的网址，标识，开放时间）。 例如：一家有药店的商店，或者是一间带咖啡厅的面包店。 A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
    """
    departments: [Organization]

    """
    组织定义的角色名称,hasPartyRoleName,逆属性 PartyRoleName.isPartyRoleNameOf
    """
    hasPartyRoleName: [PartyRoleName]

}


"""
【团体内部定义的角色】
"""
interface PartyRole {
    """
    在组织承担角色的个人
    """
    person: Person

    """
    个人在团体内承担的角色
    """
    roleName: PartyRoleName

    """
    【开始日期】 某事的开始日期和时间
    """
    dateFrom: DateTime

    """
    【结束日期】 活动（事件）结束时间。 The end date and time of the item (in ISO 8601 date format).
    """
    dateThrough: DateTime
}

"""
资源对象所属的namespace,根据一定规则由平台生成或配置定义如：io.shurui.store001.order, 默认值是default
如果某个角色拥有inamespace：'io.shurui'的权限，则拥有'io.shurui'一下所有子namespace的相应权限
"""
type Namespace implements Thing & Node{
    """
    资源对象所属的namespace,根据一定规则由平台生成或配置定义如：io.shurui.store001.order, 默认值是default
    如果某个角色拥有inamespace：'io.shurui'的权限，则拥有'io.shurui'一下所有子namespace的相应权限
    """
    namespace: String @search(by: [exact, regexp])

    """
    拥有namespace的组织或用户
    """
    isNamespaceOf: Party

}

"""
组织定义的角色，组织内统筹定义
"""
type PartyRoleName implements  Thing & Node{

    """
    isPartyRoleNameOf,逆属性 Organization.hasPartyRoleName
    """
    isRoleNameOf: Organization

    """
    角色分组,如员工角色组、会员角色组
    """
    group: String

    """
    【作者】 该 CreativeWork 的创作者/作者。跟CreativeWork的Author属性一样。 The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.creator    Organization or Person or CreativeWork or UserReviews
    """
    creator: User

    """
    【创建日期】 创作出CreativeWork的日期。 The date on which the CreativeWork was created or the item was added to a DataFeed. dateCreated    DateTime or Date or DataFeedItem or CreativeWork
    """
    dateCreated: DateTime
}

"""
可读物
"""
interface Readable{
    """
    【阅读收条】 记录每个人阅读本条消息的时间,逆属性: ReadNote.isReadNoteOf
    """
    hasReadNotes: [ReadNote]
}

"""
Canonical URL: http://cnschema.org/DataCatalog
【数据目录】数据集的目录 A collection of datasets.
"""
type DataCatalog implements  Thing & Node{

    """
    【所在父数据集目录】所在的父数据集目录 A data catalog which contains this dataset.
    """
    parentDataCatalog: DataCatalog

    """
    【包含子数据集目录】包含子的数据集目录
    """
    subDataCatalogs: [DataCatalog]

    """
    【作者】 该 CreativeWork 的创作者/作者。
    """
    creator: User

    """
    【创建日期】 创作出CreativeWork的日期。 The date on which the CreativeWork was created or the item was added to a DataFeed. dateCreated    DateTime or Date or DataFeedItem or CreativeWork
    """
    dateCreated: DateTime
}

"""
【对话】组织之间或特定主题的人员之间的一个或多个消息。 可以使用isPartOf或hasPart属性将个人消息链接到会话。 One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.
"""
type Conversation implements  Thing & Node{

    """
    【关于】 事物的关于信息 The subject matter of the content.
    """
    about: Thing

    """
    【负责人】 对CreativeWork负有法律责任的特定的人。 Specifies the Person that is legally accountable for the CreativeWork.
    """
    accountablePerson: User

    """
    【作者】 该 CreativeWork 的创作者/作者。
    """
    creator: User

    """
    【创建日期】 创作出CreativeWork的日期。 The date on which the CreativeWork was created or the item was added to a DataFeed. dateCreated    DateTime or Date or DataFeedItem or CreativeWork
    """
    dateCreated: DateTime

    """
    【所在数据集目录】所在的数据集目录 A data catalog which contains this dataset.
    """
    includedInDataCatalog: DataCatalog

    """
    参照 hasPart【作品组件】 表示某个作品是该作品的一部分
    """
    hasMessages: [Message]

    """
    本会话Conversation给第三方软件如Github、阿里云代码创建的webhook，第三方软件向本会话推送事件消息
    """
    webhook: [Webhook]
}

"""
【消息】由发送者发给一个或多个组织或个人的信息 A single message from a sender to one or more organizations or people.
"""
type Message implements  Thing & Node & Readable{

    """
    参照isPartOf【从属于】 是它的一部分 Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.
    """
    isMessageOf: [Conversation]

    """
    【发送者】 参与者的子属性。例如邮件的发送者。 A sub property of participant. The participant who is at the sending end of the action.
    """
    sender: User!

    """
    【发送日期】 消息被发送的日期/时间。 The date/time at which the message was sent.
    """
    dateSent: DateTime

    """
    【收件人】 消息的直接收件人 A sub property of recipient. The recipient who was directly sent the message.
    """
    toRecipient: User

    """
    【阅读日期】 如果存在单个的收件人，就是消息被收件人读取的日期/时间。 The date/time at which the message has been read by the recipient if a single recipient exists.
    """
    dateRead: DateTime

    """
    【接收日期】 如果存在单个的收件人，就是消息被收件人接收的日期/时间。 The date/time the message was received if a single recipient exists.
    """
    dateReceived: DateTime

    """
    【接收者】 参与者的子属性。 在行动接收端的参与者。 A sub property of participant. The participant who is at the receiving end of the action.
    """
    recipient: [User]

    """
    【评论】 评论，一般是用户对CreativeWork的评论。
    """
    hasReviews: [Review]
}

"""
【评论】对项目的评论 - 例如对博客文章的评论。 该评论的内容是通过text属性表示的，其主题通过about，与所有CreativeWorks共享的属性来表达 A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the text property, and its topic via about, properties shared with all CreativeWorks.
"""
type Review implements  Thing & Node{
    """itemReviewed    Thing    The item that is being reviewed/rated."""
    itemReviewed:    Thing

    """reviewAspect    Text    This Review or Rating is relevant to this part or facet of the itemReviewed."""
    reviewAspect: String

    """reviewBody    Text    The actual body of the review."""
    reviewBody: String

    """
    ratingValue    评分 The rating for the content.
    """
    ratingValue: Int

    """
    【作者】 此内容或评分的作者。
    """
    author:    User

    """
    【创建日期】 创作出CreativeWork的日期。
    """
    dateCreated: DateTime
}

"""
【阅读收条】 记录每个人阅读本条消息的时间
"""
type ReadNote implements  Thing & Node{

    """
    【阅读内容】 逆属性: Message.hasReadNotes
    """
    isReadNoteOf: [Readable]

    """
    【读者】 内容的阅读者。
    """
    reader: User

    """
    【阅读日期】
    """
    dateRead: DateTime
}

"""
【一般机构】一个组织，例如学校、非政府组织、公司、俱乐部等 An organization such as a school, NGO, corporation, club, etc.
也用于临时几个人组成的聊天小组，房间
http://cnschema.org/Organization
"""
type GeneralOrganization  implements  Thing & Node & Organization & Party {

    """可以访问的会话"""
    availableConversations: [Conversation]

    """ 本组织默认可访问的会话 """
    defaultConversation: Conversation

}

"""
[【雇员角色】OrganizationRole的子类，描述雇员关系,有时间限制](http://cnschema.org/EmployeeRole)
"""
type EmployeeRole implements  Thing & Node & PartyRole{
    """
    【员工编号】
    """
    number: String
}

"""
[【社交关注角色】FollowerRole)
"""
type FollowerRole implements  Thing & Node & PartyRole{
    """关注设置,如关注最新产品信息"""
    settings: String
}

"""
[【会员角色】OrganizationRole的子类，描述会员关系,有时间限制](http://cnschema.org/EmployeeRole)
"""
type MemberRole implements  Thing & Node & PartyRole{
    """
    【会员编号】
    """
    number: String
}

"""
描述产品的所有者或所属机构的信息
"""
type Ownership implements  Thing & Node{

    """
    【获取来源】 产品获取的机构来源 The organization or person from which the product was acquired.
    """
    acquiredFrom: Party

    """
    【东西类型】 拥有的东西Thing。
    """
    owned: Thing

    """
    【个人或组织】拥有者
    """
    owner: Party

    """
    【开始日期】 某事的开始日期和时间
    """
    dateFrom: DateTime

    """
    【结束日期】 活动（事件）结束时间。 The end date and time of the item (in ISO 8601 date format).
    """
    dateThrough: DateTime
}

"""
用户账号
"""
type User implements  Thing & Node{

    """
    The username used to login.
    We also want to make sure that usernames are unique. The @id directive takes care of that - it also automatically adds hash searching, so we can drop the @search(by: [hash]), though having it also causes no harm.
    """
    username: String! @id

    """
    The password used to login.
    """
    password: String!

    """
    The user's public profile bio.
    """
    bio: String

    """
    用户账号对应的人，有账号一定有相关的Person，逆属性 Person.hasUser，参考Inverse property: hasPart
    """
    isUserOf: Person @hasInverse(field: "hasUser")
}

"""
个人,可能在平台里有一个且唯一的用户账号User
"""
type Person implements Party &  Thing & Node{
    """
    个人身份证ID
    """
    personalID: String!

    """【姓】 姓。 在美国，是一个人姓名中的最后一个字。 Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property."""
    familyName: String

    """【名】 名。在美国，是一个人名字中的第一个字 Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property."""
    givenName: String

    """本人所拥有的用户账号，逆属性User.isUserOf，参考Inverse property: isPartOf"""
    hasUser: User @hasInverse(field: "isUserOf")
}

"""
零售店铺
"""
type Store implements  Thing & Node & Organization & Party {
    """
    【雇员】 组织的雇员.在组织承担角色的个人有时间限制
    """
    employees: [EmployeeRole]

    """
    【关注组织的人】 社交网络上本组织被别人关注
    """
    followers: [FollowerRole]

    """
    【会员】 组织或项目的成员,在组织承担角色的个人有时间限制
    """
    members: [MemberRole]

    """
    【创建日期】
    """
    dateCreated:    DateTime

    """
    【更新日期】
    """
    dateModified: DateTime

    """
    【创建人】 该物体的创作者/作者。
    """
    creator: User
}



"""
产品
"""
type Product implements Shoppingable &  Thing & Node{

    """
    【型号】 产品的型号。
    """
    hasModels: [ProductModel]  @hasInverse(field: "isModelOf")

}

"""
产品型号
"""
type ProductModel implements Shoppingable &  Thing & Node{

    """
    【产品】 所属产品。
    """
    isModelOf: Product @hasInverse(field: "hasModels")
}

"""
商品供应
"""
type Offer implements  Thing & Node{
    """
    可购物的一个商品供应
    """
    itemOffered: Shoppingable

    """
    供应商品的组织或个人 Inverse property: makesOffer.
    """
    offeredBy: Party

    """
    商品价格The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.
    """
    price: Int

    """
    【价格有效开始日期】
    """
    dateFrom: DateTime

    """
    【价格有效结束日期】
    """
    dateThrough: DateTime
}


"""
http://cnschema.org/EntryPoint 入口】一个入口，包含一些基于web的协议 An entry point, within some Web-based protocol.
"""
type EntryPoint implements   Thing & Node{

    """【链接模版】 一个URL的模版，可以利用变化参数形成完整的URL。 An url template (RFC6570) that will be used to construct the target of the execution of the action."""
    urlTemplate:    String
}


"""
https://schema.org/SoftwareApplication A software application.
"""
type SoftwareApplication implements  Thing & Node {

    """
    applicationSuite    Text    The name of the application suite to which the application belongs (e.g. Excel belongs to Office).
    """
    applicationSuite: String

    """
    availableOnDevice    Text    Device required to run the application. Used in cases where a specific make/model is required to run the application. Supersedes device.
    countriesNotSupported    Text    Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
    countriesSupported    Text    Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
    downloadUrl    URL    If the file can be downloaded, URL to download the binary.
    """
    downloadUrl: String

    """
    featureList    Text  or URL    Features or modules provided by this application (and possibly required by other applications).
    """
    featureList: String

    """
    fileSize    Text    Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.
    installUrl    URL    URL at which the app may be installed, if different from the URL of the item.
    """
    installUrl:String

    """
    memoryRequirements    Text  or URL    Minimum memory requirements.
    operatingSystem    Text    Operating systems supported (Windows 7, OSX 10.6, Android 1.6).
    permissions    Text    Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).
    processorRequirements    Text    Processor architecture required to run the application (e.g. IA64).
    releaseNotes    Text  or URL    Description of what changed in this version.
    """
    releaseNotes: String

    """
    screenshot    ImageObject  or URL    A link to a screenshot image of the app.
    """
    screenshot: String

    """
    softwareAddOn    SoftwareApplication    Additional content for a software application.
    softwareHelp    CreativeWork    Software application help.
    softwareRequirements    Text  or URL    Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime). Supersedes requirements.
    softwareVersion    Text    Version of the software instance.
    storageRequirements    Text  or URL    Storage requirements (free space required).
    supportingData    DataFeed    Supporting data for a SoftwareApplication.
    """
    softwareVersion: String
}

"""
网络钩子是“用户定义的HTTP回调”。[2]网络钩子通常被某些事件激活，比如将代码推送到源[3]或评论博客。[4]当此事件发生时，原网站将向为网络钩子配置的URL发送HTTP请求。用户可配置它们引发网页上的事件以调用另一个网站的行为。Webhooks allow external services to be notified when certain events happen.
"""
type Webhook implements  Thing & Node{
    """
    回调url
    """
    payloadUrl: String

    """
    回调提交的数据内容类型如application/json
    """
    contentType: String

    """
    使用payloadUrl的安全token
    """
    secret: String

    """
    【作者】 该 CreativeWork 的创作者/作者。
    """
    creator: User

    """
    【创建日期】 创作出CreativeWork的日期。 The date on which the CreativeWork was created or the item was added to a DataFeed. dateCreated    DateTime or Date or DataFeedItem or CreativeWork
    """
    dateCreated: DateTime

    """
    调用此webhook的客户端
    """
    client: SoftwareApplication

}


"""
购物车
"""
type Cart implements Thing & Node{
    """
    购物车所有者
    """
    owner: User!

    email: String
    items: [CartItem!] @hasInverse(field: "isItemOf")
    notes: String
    createdAt: DateTime
    updatedAt: DateTime
}

"""
购物车内物品、服务、优惠券等
"""
type CartItem  implements Thing & Node{

    """
    所属购物车,
    """
    isItemOf: Cart  @hasInverse(field: "items")

    type: CartItemType!
    quantity: Int!
    createdAt: DateTime!
    updatedAt: DateTime!
}

"""
购物车内物品、服务、优惠券等类型
"""
enum CartItemType {
    SKU
    TAX
    SHIPPING
}


"""
Checkout:A container for all the information required to checkout items and pay.
结算单，包含需要结算和支付的所有信息：税收、送货地址、发票账单寄送地址、备注说明等
结算单信息完备后才可以创建订单
"""
type Checkout implements Thing & Node{
    """
    结算单所有者
    """
    owner: User!

    """
    The date and time when the checkout was completed.
    """
    completedAt: DateTime

    """
    The date and time when the checkout was created.
    """
    createdAt: DateTime

    """
    The email attached to this checkout.
    """
    email: String

    """
    A list of line item objects, each one containing information about an item in the checkout.
    """
    items: [CheckoutItem]  @hasInverse(field: "isItemOf")

    """
    The note associated with the checkout.
    """
    note: String

    """
    Whether or not the Checkout is ready and can be completed. Checkouts may have asynchronous operations that can take time to finish. If you want to complete a checkout or ensure all the fields are populated and up to date, polling is required until the value is true.
    """
    ready: Boolean

    """
    States whether or not the fulfillment requires shipping.
    """
    requiresShipping: Boolean

    """
    The date and time when the checkout was last updated.
    """
    updatedAt: DateTime
}


"""
A single line item in the checkout, grouped by variant and attributes.
结算单内容项
"""
type CheckoutItem implements Thing & Node{
    """
    所属结算单
    """
    isItemOf: Checkout  @hasInverse(field: "items")

    """
    The quantity of the line item.
    """
    quantity: Int!

    """
    Product/Service variant of the line item.
    """
    variant: Shoppingable

}




"""
https://schema.org/Poder An poder is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
命名为Poder即是PurchaseOrder购物订单的意思,为了区分排序单词Order
"""
type Poder implements Thing & Node{
    """
    acceptedOffer    Offer    The offer(s) -- e.g., product, quantity and price combinations -- included in the poder.
    billingAddress    PostalAddress    The billing address for the poder.
    broker    Organization  or Person    An entity that arranges for an exchange between a buyer and a seller. In most cases a broker never acquires or releases ownership of a product or service involved in an exchange. If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred. Supersedes bookingAgent.
    """
    broker:    Party

    """
    confirmationNumber    Text    A number that confirms the given poder or payment has been received.
    customer    Organization  or Person    Party placing the poder or paying the invoice.
    """
    customer:    Party

    """
    discount    Number  or Text    Any discount applied (to an Poder).
    discountCode    Text    Code used to redeem a discount.
    discountCurrency    Text    The currency of the discount.

    Use standard formats: ISO 4217 currency format e.g. "USD"; Ticker symbol for cryptocurrencies e.g. "BTC"; well known names for Local Exchange Tradings Systems (LETS) and other currency types e.g. "Ithaca HOUR".

    isGift    Boolean    Was the offer accepted as a gift for someone other than the buyer.
    """
    isGift: Boolean

    """
    poderDate    DateTime  or DateTime    DateTime poder was placed.
    """
    poderDate: DateTime

    """
    poderNumber    Text    The identifier of the transaction.
    """
    poderNumber: String

    """
    poderStatus    PoderStatus    The current status of the poder.
    """
    poderStatus:    PoderStatus

    """
    poderedItem    PoderItem  or Product  or Service    The item podered.
    """
    items:    [PoderItem] @hasInverse(field: "isItemOf")

    """
    partOfInvoice    Invoice    The poder is being paid as part of the referenced Invoice.
    paymentDueDate    DateTime  or DateTime    The date that payment is due. Supersedes paymentDue.
    paymentMethod    PaymentMethod    The name of the credit card or other method of payment for the poder.
    paymentMethodId    Text    An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
    paymentUrl    URL    The URL for sending a payment.
    seller    Organization  or Person    An entity which offers (sells / leases / lends / loans) the services / goods. A seller may also be a provider. Supersedes merchant, vendor.
    """
    seller:    Organization

}

"""
https://schema.org/PoderItem
An poder item is a line of an poder. It includes the quantity and shipping details of a bought offer.
购物订单内容项
"""
type PoderItem implements Thing & Node{

    """
    partOfPoder    Poder    The overall poder the items in this delivery were included in.
    """
    isItemOf:    Poder @hasInverse(field: "items")

    """
    poderItemNumber    Text    The identifier of the poder item.
    """
    poderItemNumber: String

    """
    poderItemStatus    PoderStatus    The current status of the poder item.
    """
    poderItemStatus:    PoderStatus

    """
    poderQuantity    Number    The number of the item podered. If the property is not set, assume the quantity is one.
    """
    poderQuantity: Int

    """
    poderedItem    PoderItem  or Product  or Service
    """
    poderedItem: Shoppingable

}

enum PoderStatus{
    PoderCancelled
    PoderDelivered
    PoderInTransit
    PoderPaymentDue
    PoderUNPAID
    PoderPAID
    PoderPickupAvailable
    PoderProblem
    PoderProcessing
    PoderReturned
}

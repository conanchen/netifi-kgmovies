buildscript {
    ext {
        protobufVersion = "3.7.1"
        lombokVersion = "1.16.20"
        springBootVersion =  "2.1.6.RELEASE"
        graphqlStarterVersion = "6.0.1"
        protobufConverterVersion = "1.1.5"
        futuresExtraVersion = "4.2.0"
        protosVersion = "0.1.131-SNAPSHOT"
        gradleDownloadTaskVersion = "4.0.0"
    }
    repositories {
        repositories {
            mavenLocal()
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            maven {
                credentials {
                    username 'KwPAxj'
                    password 'KKnP3maIK3'
                }
                url 'https://repo.rdc.aliyun.com/repository/73792-release-PXkyIy/'
            }
            maven {
                credentials {
                    username 'KwPAxj'
                    password 'KKnP3maIK3'
                }
                url 'https://repo.rdc.aliyun.com/repository/73792-snapshot-z4fvGZ/'
            }
            maven { url 'https://jitpack.io' }
            mavenCentral()
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.gradle.build-scan" version "3.0"
    //id "com.github.hierynomus.license" version "0.14.0"
    id "net.saliman.properties" version "1.4.6"
    id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
    id "io.spring.dependency-management" version "1.0.9.RELEASE" apply false
    id "com.google.protobuf" version "0.8.10" apply false
}

buildScan {
    termsOfServiceUrl = "https://gradle.com/terms-of-service"
    termsOfServiceAgree = "yes"
}

allprojects {
    apply plugin: 'idea'
    // apply plugin: 'com.github.hierynomus.license'
    apply plugin: 'net.saliman.properties'

    repositories {
        mavenCentral()
        jcenter()
    }

    // license {
    //     header rootProject.file('codequality/LICENSE_HEADER')
    //     strictCheck true
    //     excludes([ "**/*.json", "**/*.html", "**/*.js", "**/*.css",  "**/*.map" ])
    // }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom "com.netifi:netifi-bom:${netifiBomVersion}"
            mavenBom "org.apache.logging.log4j:log4j-bom:${log4j2Version}"
        }

        dependencies {
            dependency "com.netifi:netifi-spring-boot-starter:${netifiSpringVersion}"
            dependency "com.google.protobuf:protobuf-java:${protobufVersion}"
            dependency "com.google.protobuf:protoc:${protobufVersion}"
            dependency "io.rsocket:rsocket-core:${rsocketVersion}"
            dependency "io.rsocket:rsocket-transport-netty:${rsocketVersion}"
            dependency "io.rsocket.rpc:rsocket-rpc-protobuf:${rsocketRpcVersion}"
            dependency "io.rsocket.rpc:rsocket-rpc-core:${rsocketRpcVersion}"
            dependency "com.graphql-java-kickstart:graphql-spring-boot-starter:${graphqlStarterVersion}"
            dependency "com.graphql-java-kickstart:altair-spring-boot-starter:${graphqlStarterVersion}"
            dependency "com.graphql-java-kickstart:graphiql-spring-boot-starter:${graphqlStarterVersion}"
            dependency "com.graphql-java-kickstart:voyager-spring-boot-starter:${graphqlStarterVersion}"
            dependency "com.graphql-java-kickstart:graphql-spring-boot-starter-test:${graphqlStarterVersion}"

          }
    }
}

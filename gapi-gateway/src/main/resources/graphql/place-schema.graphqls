extend type Query {
    defaultPlaceFind(id: ID, defID: ID): DefaultPlace
    administrativeAreaFind(id: ID, defID: ID): AdministrativeArea

    """
    [Get storeSearch Sample Query](https://github.com/conanchen/netifi-kgmovies/blob/master/gapi-gateway/readme/storeSearch.md)
    > [分页查询参数](https://www.jianshu.com/p/79af61abb4ff)：
    - after: 开始游标，与first搭配使用；
    - first: 指定取游标后的多少个数据，与after搭配使用；
    - before: 结束游标，与last搭配使用；
    - last: 指定取游标前的多少个数据，与before搭配使用；
    """
    storeSearch(filter: StoreFilter, order: StoreOrder, after: String, first: Int, before: String, last: Int): StoreConnection
    """
    [仿照Dgraph自动生成的graphql查询](https://github.com/dgraph-io/dgraph/tree/master/graphql/schema/testdata/schemagen/output)
    """
    storeSearch1(filter: StoreFilter, order: StoreOrder, first: Int, offset: Int): [Store]
    
    storeFind(id: ID, storeID: ID): Store

    childcareFind(id: ID, lbsID: ID): Childcare
    eldercareFind(id: ID, lbsID: ID): Eldercare

    localBusinessSearch(filter: LocalBusinessFilter, order: LocalBusinessOrder, first: Int, offset: Int): LocalBusinessConnection
    localBusinessFind(id: ID, lbsID: ID): LocalBusiness
}

extend type Mutation {
    """店铺创建,操作人员必须认证登录后才可操作"""
    storeCreate(input: StoreCreateInput!): StoreCreatePayload! @authn(authenticated: true)
}

"""https://schema.org/Store A retail good store."""
type Store implements Thing & Organization & LocalBusiness & Node{
    """openingHours The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. """
    openingHours: String

    """paymentAccepted    Text    Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc."""
    paymentAccepted: String

    """priceRange    Text    The price range of the business, for example $$$."""
    priceRange: String

    #    Prperties from Thing
    """name    Text    The name of the item."""
    name: String

    """【别名】 该项的别名。 An alias for the item."""
    alternateName: String

    """【描述】 该项的一个简单描述。 A description of the item."""
    description: String

    """【创建日期】 创作出CreativeWork的日期。 The date on which the CreativeWork was created or the item was added to a DataFeed."""
    dateCreated:    DateTime

    """【更新日期】 CreativeWork最近被修改过的日期。 The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed."""
    dateModified: DateTime

    #    Properties from Organization
    """【上级组织】 subOrganization的反向属性，即包含这个组织的更大组织"""
    parentOrganization: [Organization]

    """【子机构】 两个组织之间的关系。其中第二个组织，例如以子公司的名字，属于第一个组织。"""
    subOrganizations: [Organization]

    """【部门】 组织与该组织某个部门之间的关系，也被描述成组织（允许不同的网址，标识，开放时间）。 例如：一家有药店的商店，或者是一间带咖啡厅的面包店。 A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe."""
    departments: [Organization]

    """【雇员】 组织的雇员.在组织承担角色的个人有时间限制"""
    employees: [EmployeeRole]
    employeesPage(after: String, first: Int, before: String, last: Int, personId: String ): EmployeeRoleConnection

    """【关注组织的人】 社交网络上本组织被别人关注 """
    followers: [Person]

    """【会员】 组织或项目的成员 A member of an Organization or a ProgramMemberRole.在组织承担角色的个人有时间限制"""
    members: [MemberRole]
    membersPage(after: String, first: Int, before: String, last: Int, personId: String ): MemberRoleConnection

    """[Potential Action:There is an action status for potential actions, if you want to markup actions that have not occurred yet but are possible. potentialAction is defined by schema.org as “an idealized action in which this thing would play an 'object' role”](https://ondyr.com/what-is-action-schema/)"""
    potentialActions: [Action]

    """hasOrgRoleName,逆属性 OrgRoleName.isOrgRoleNameOf"""
    hasOrgRoleName: [OrgRoleName]

    """本店关注的人数"""
    followernum: Int

    """The id of the object."""
    id: ID!
}


"""A connection to a list of items."""
type StoreConnection {
    """Information to aid in pagination."""
    pageInfo: PageInfo!

    """A list of edges."""
    edges: [StoreEdge]

    """
    A count of the total number of objects in this connection, ignoring pagination.
    This allows a client to fetch the first five objects by passing "5" as the
    argument to "first", then fetch the total count so it could display "5 of 83",
    for example.
    """
    totalCount: Int

    """
    A list of all of the objects returned in the connection. This is a convenience
    field provided for quickly exploring the API; rather than querying for
    "{ edges { node } }" when no edge data is needed, this field can be be used
    instead. Note that when clients like Relay need to fetch the "cursor" field on
    the edge to enable efficient pagination, this shortcut cannot be used, and the
    full "{ edges { node } }" version should be used instead.
    """
    films: [Store]
}

"""An edge in a connection."""
type StoreEdge {
    """The item at the end of the edge"""
    node: Store

    """A cursor for use in pagination"""
    cursor: String!
}

"""https://schema.org/ChildCare A Childcare center.托儿所"""
type Childcare implements Organization & LocalBusiness & Node{
    """openingHours The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. """
    openingHours: String

    """paymentAccepted    Text    Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc."""
    paymentAccepted: String

    """priceRange    Text    The price range of the business, for example $$$."""
    priceRange: String

    #    Properties from Organization
    """【上级组织】 subOrganization的反向属性，即包含这个组织的更大组织"""
    parentOrganization: [Organization]

    """【子机构】 两个组织之间的关系。其中第二个组织，例如以子公司的名字，属于第一个组织。"""
    subOrganizations: [Organization]

    """【部门】 组织与该组织某个部门之间的关系，也被描述成组织（允许不同的网址，标识，开放时间）。 例如：一家有药店的商店，或者是一间带咖啡厅的面包店。 A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe."""
    departments: [Organization]

    """【雇员】 组织的雇员.在组织承担角色的个人有时间限制"""
    employees: [EmployeeRole]
    employeesPage(after: String, first: Int, before: String, last: Int, personId: String ): EmployeeRoleConnection

    """【关注组织的人】 社交网络上本组织被别人关注 """
    followers: [Person]

    """【会员】 组织或项目的成员 A member of an Organization or a ProgramMemberRole.在组织承担角色的个人有时间限制"""
    members: [MemberRole]
    membersPage(after: String, first: Int, before: String, last: Int, personId: String ): MemberRoleConnection

    """[Potential Action:There is an action status for potential actions, if you want to markup actions that have not occurred yet but are possible. potentialAction is defined by schema.org as “an idealized action in which this thing would play an 'object' role”](https://ondyr.com/what-is-action-schema/)"""
    potentialActions: [Action]

    """hasOrgRoleName,逆属性 OrgRoleName.isOrgRoleNameOf"""
    hasOrgRoleName: [OrgRoleName]

    """The id of the object."""
    id: ID!
}

"""https://schema.org/ChildCare A Childcare center.托老所"""
type Eldercare implements Organization & LocalBusiness & Node{
    """openingHours The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. """
    openingHours: String

    """paymentAccepted    Text    Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc."""
    paymentAccepted: String

    """priceRange    Text    The price range of the business, for example $$$."""
    priceRange: String

    #    Properties from Organization
    """【上级组织】 subOrganization的反向属性，即包含这个组织的更大组织"""
    parentOrganization: [Organization]

    """【子机构】 两个组织之间的关系。其中第二个组织，例如以子公司的名字，属于第一个组织。"""
    subOrganizations: [Organization]

    """【部门】 组织与该组织某个部门之间的关系，也被描述成组织（允许不同的网址，标识，开放时间）。 例如：一家有药店的商店，或者是一间带咖啡厅的面包店。 A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe."""
    departments: [Organization]

    """【雇员】 组织的雇员.在组织承担角色的个人有时间限制"""
    employees: [EmployeeRole]
    employeesPage(after: String, first: Int, before: String, last: Int, personId: String ): EmployeeRoleConnection

    """【关注组织的人】 社交网络上本组织被别人关注 """
    followers: [Person]

    """【会员】 组织或项目的成员 A member of an Organization or a ProgramMemberRole.在组织承担角色的个人有时间限制"""
    members: [MemberRole]
    membersPage(after: String, first: Int, before: String, last: Int, personId: String ): MemberRoleConnection

    """[Potential Action:There is an action status for potential actions, if you want to markup actions that have not occurred yet but are possible. potentialAction is defined by schema.org as “an idealized action in which this thing would play an 'object' role”](https://ondyr.com/what-is-action-schema/)"""
    potentialActions: [Action]

    """hasOrgRoleName,逆属性 OrgRoleName.isOrgRoleNameOf"""
    hasOrgRoleName: [OrgRoleName]

    """The id of the object."""
    id: ID!
}


"""【地方】广泛意义上的一个地方 Entities that have a somewhat fixed, physical extension."""
type DefaultPlace implements Place & Node{
    """address    PostalAddress or Text or GeoShape or Organization or GeoCoordinates or Person or Place
    【地址】 该项的物理地址。 Physical address of the item."""
    address: String
    """【包含在】 地点的包含关系 The basic containment relation between a place and one that contains it."""
    containedInPlace: Place
    """【包含】 地点的包含关系 The basic containment relation between a place and another that it contains."""
    containsPlaces:    [Place]
    """【经纬度】 地理位置的坐标。 The geo coordinates of the place."""
    geo: GeoCoordinates

    """The id of the object."""
    id: ID!
}

"""http://cnschema.org/AdministrativeArea【行政区】一个地理区域，一般由特定政府管辖。 A geographical region, typically under the jurisdiction of a particular government."""
type AdministrativeArea implements Place & Node{
    """address    PostalAddress or Text or GeoShape or Organization or GeoCoordinates or Person or Place
    【地址】 该项的物理地址。 Physical address of the item."""
    address: String
    """【包含在】 地点的包含关系 The basic containment relation between a place and one that contains it."""
    containedInPlace: Place
    """【包含】 地点的包含关系 The basic containment relation between a place and another that it contains."""
    containsPlaces:    [Place]
    """【经纬度】 地理位置的坐标。 The geo coordinates of the place."""
    geo: GeoCoordinates

    """The id of the object."""
    id: ID!
}


"""【经纬度】一个地点或事件的经纬坐标 The geographic coordinates of a place or event."""
type GeoCoordinates implements Node{

    """elevation    Text or Number or GeoCoordinates or GeoShape
    【海拔高度】 该地的高程。 The elevation of a location (WGS 84)."""
    elevation: Int

    """latitude    Text or Number or GeoCoordinates
    【纬度】 一个位置的纬度 The latitude of a location. For example 37.42242 (WGS 84)."""
    latitude: Int

    """longitude    Text or Number or GeoCoordinates
    【经度】 位置的经度 The longitude of a location. For example -122.08585 (WGS 84)."""
    longitude: Int

    """postalCode    Text or GeoShape or PostalAddress or GeoCoordinates
    【邮政编码】 邮政编码，例如94043 The postal code. For example, 94043."""
    postalCode: String

    """The id of the object."""
    id: ID!
}



"""【地方】广泛意义上的一个地方 Entities that have a somewhat fixed, physical extension."""
interface Place {
    """address    PostalAddress or Text or GeoShape or Organization or GeoCoordinates or Person or Place
    【地址】 该项的物理地址。 Physical address of the item."""
    address: String
    """【包含在】 地点的包含关系 The basic containment relation between a place and one that contains it."""
    containedInPlace: Place
    """【包含】 地点的包含关系 The basic containment relation between a place and another that it contains."""
    containsPlaces:    [Place]
    """【经纬度】 地理位置的坐标。 The geo coordinates of the place."""
    geo: GeoCoordinates
}

"""https://schema.org/LocalBusiness"""
interface LocalBusiness{
    """openingHours The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. """
    openingHours: String

    """paymentAccepted    Text    Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc."""
    paymentAccepted: String

    """priceRange    Text    The price range of the business, for example $$$."""
    priceRange: String

}


"""A connection to a list of items."""
type LocalBusinessConnection {
    """Information to aid in pagination."""
    pageInfo: PageInfo!

    """A list of edges."""
    edges: [LocalBusinessEdge]

    """
    A count of the total number of objects in this connection, ignoring pagination.
    This allows a client to fetch the first five objects by passing "5" as the
    argument to "first", then fetch the total count so it could display "5 of 83",
    for example.
    """
    totalCount: Int

    """
    A list of all of the objects returned in the connection. This is a convenience
    field provided for quickly exploring the API; rather than querying for
    "{ edges { node } }" when no edge data is needed, this field can be be used
    instead. Note that when clients like Relay need to fetch the "cursor" field on
    the edge to enable efficient pagination, this shortcut cannot be used, and the
    full "{ edges { node } }" version should be used instead.
    """
    localBusiness: [LocalBusiness]
}

"""An edge in a connection."""
type LocalBusinessEdge {
    """The item at the end of the edge"""
    node: LocalBusiness

    """A cursor for use in pagination"""
    cursor: String!
}

input LocalBusinessOrder {
    name: String
}

input LocalBusinessFilter {
    name: String
}

input StoreOrder {
    asc: StoreOrderable
    desc: StoreOrderable
    then: StoreOrder
}
enum StoreOrderable {
    name
    dateCreated
    dateModified
    followeenum
}

input StoreFilter {
    id: [ID!]
    name: StringHashFilter_StringRegExpFilter
    and: StoreFilter
    or: StoreFilter
    not: StoreFilter
}

input StoreCreateInput {
    """
    客户端变更请求的唯一标识，A unique identifier for the client performing the mutation.
    """
    clientMutationId: String

    actionId: ID!
}

"""Store mutation api response payload"""
type StoreCreatePayload{
    """The store object ."""
    store: Store

    """所执行的操作Action"""
    action: Action

    """List of errors that occurred executing the mutation."""
    storeCreateErrors: [StoreCreateError!]!
}

"""Represents an error that happens during execution of a store mutation."""
type  StoreCreateError implements DisplayableError{

    """Error code to uniquely identify the error."""
    code: StoreCreateErrorCode

    """Path to the input field which caused the error."""
    field: [String!]

    """The error store."""
    message: String!

}

"""Possible error codes that could be returned by a store mutation."""
enum StoreCreateErrorCode{
    """Input value is blank."""
    BLANK

    """Input value is invalid."""
    INVALID

    """Input value is too long."""
    TOO_LONG

    """不允许执行该操作Action"""
    ACTION_NOT_PERMITTED
}


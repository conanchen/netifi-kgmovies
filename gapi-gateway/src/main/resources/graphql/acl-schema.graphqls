extend type Query {
    aclRoleFind(id: ID, ugId: ID): ACLRole
    aclGroupFind(id: ID, ugId: ID): ACLGroup
    aclOrganizationFind(id: ID, ugId: ID): ACLOrganization
    aclUserFind(id: ID, ugId: ID): ACLUser
    aclActionFind(id: ID, ugId: ID): ACLAction
    aclResourcePropertyFind(id: ID, ugId: ID): ACLResourceProperty
}

"""拥有访控角色的组织Organization或单个用户User"""
interface ACLParty {
    hasAclr: [ACLRole]
}

"""访控角色：访问控制角色 e.g. 1-管理员 2-可以创建 3-产品"""
type ACLRole implements Node{
    """【组织或个人】 本ACLRole所属组织或个人，逆属性 ACLParty.hasAclr"""
    isAclrOf: ACLParty!

    """1. 角色名称,如管理员 name    Text    The name of the item."""
    name: String!

    """【别名】 该项的别名。 An alias for the item."""
    alternateName: String

    """【描述】 该项的一个简单描述。 A description of the item."""
    description: String

    """2. 被授权的Action，如Create、Read、Update、Delete"""
    action: [ACLAction!]!

    """3. 授权访问的资源对象,逆属性 ACLResource.hasAclrole"""
    isAclroleOf: ACLResource!

    """访控角色绑定的用户组或用户e.g. 管理员角色有: 1.超级运营组、2.用户陈朵拉，逆属性 ACLRoleBinding.isBindingOf"""
    hasBinding: [ACLRoleBinding]

    """The id of the object."""
    id: ID!
}

"""访控角色绑定的用户组或用户e.g. 管理员角色有: 1.超级运营组、2.用户陈朵拉"""
type ACLRoleBinding implements Node{

    """访问权限所属访控角色"""
    isBindingOf: ACLRole

    """角色绑定的主角/成员"""
    subjects: [ACLSubject]

    """The id of the object."""
    id: ID!
}

"""角色绑定的主角/成员, 用户或访控组"""
union ACLSubject = ACLUser | ACLGroup

"""访控组,e.g.超级运营组有用户: 陈朵拉、安静的角落"""
type ACLGroup implements Thing & Node{
    """name    Text    The name of the item."""
    name: String

    """【别名】 该项的别名。 An alias for the item."""
    alternateName: String

    """【描述】 该项的一个简单描述。 A description of the item."""
    description: String

    """组成员"""
    member: [ACLUser]

    """The id of the object."""
    id: ID!
}

"""需要进行访问控制的资源"""
type ACLResource implements Node{
    """授权访问的资源对象,逆属性 ACLRole.isAclroleOf"""
    hasAclrole: ACLRole

    """访问角色可以读写的资源"""
    resource: Thing!

    """访问角色可以读写的资源属性,默认所有属性可读"""
    resourceProperties: [ACLResourceProperty]

    """The id of the object."""
    id: ID!
}

type ACLOrganization implements ACLParty{
    organization: Organization
    hasAclr: [ACLRole]
}

type ACLUser implements ACLParty{
    user: User
    hasAclr: [ACLRole]
}

type ACLAction {
    action: Action
}

"""资源属性访问权限 e.g. allow read name, deny write salary"""
type ACLResourceProperty {

    """属性访问允许"""
    permit: ACLPermitType!

    """属性访问权限"""
    act: ACLAccessType!

    """属性名"""
    propertyName: String!
}

"""资源属性访问允许类型"""
enum ACLPermitType{
    ALLOW
    DENY
}

"""资源属性访问权限类型"""
enum ACLAccessType{
    READ
    WRITE
}

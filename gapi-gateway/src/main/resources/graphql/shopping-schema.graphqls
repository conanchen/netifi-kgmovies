extend type Query {
  allProducts(after: String, first: Int, before: String, last: Int): ProductsConnection
  product(id: ID, productID: ID): Product
  service(id: ID, serviceID: ID): Service
}

extend type Mutation {
    createProduct(name: String!): Product!
}

"""https://schema.org/Product
Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online."""
type Product implements Node{
    name: String

    """productID	Text 	The product identifier, such as ISBN. For example: meta itemprop="productID" content="isbn:123-456-789"."""
    productID: String

    """isRelatedTo	Product  or
    Service 	A pointer to another, somehow related product (or multiple products)."""
    isRelatedTo: [Product]
    
    """isSimilarTo	Product  or
    Service 	A pointer to another, functionally similar product (or multiple products)."""
    isSimilarTo: [Product]

    """ 	The manufacturer of the product."""
    manufacturer:	Organization

    """The id of the object."""
    id: ID!
}

"""A connection to a list of items."""
type ProductsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProductsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  films: [Product]
}

"""An edge in a connection."""
type ProductsEdge {
  """The item at the end of the edge"""
  node: Product

  """A cursor for use in pagination"""
  cursor: String!
}


"""https://schema.org/Service
A service provided by an organization, e.g. delivery service, print services, etc."""
type Service implements Node{
    """name	Text 	The name of the item."""
    name: String

    """alternateName	Text 	An alias for the item."""
    alternateName: String

    """description	Text 	A description of the item."""
    description: String

    """
    aggregateRating	AggregateRating 	The overall rating, based on a collection of reviews or ratings, of the item.

    areaServed	AdministrativeArea  or
    GeoShape  or
    Place  or
    Text 	The geographic area where a service or offered item is provided. Supersedes serviceArea."""
    areaServed: Place

    """audience	Audience 	An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.
    availableChannel	ServiceChannel 	A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
    award	Text 	An award won by or for this item. Supersedes awards.
    brand	Brand  or
    Organization 	The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
    
    The hours during which this service or contact is available."""
    hoursAvailable:	OpeningHoursSpecification

    """isRelatedTo	Product  or
    Service 	A pointer to another, somehow related product (or multiple products)."""
    isRelatedTo:	Product

    """isSimilarTo	Product  or
    Service 	A pointer to another, functionally similar product (or multiple products)."""
    isSimilarTo:	Product

    """potentialAction	Action 	Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role."""
    potentialAction: [ActionUnion]

    """The id of the object."""
    id: ID!
}

"""A structured value providing information about the opening hours of a place or a certain service inside a place.

The place is open if the opens property is specified, and closed otherwise.

If the value for the closes property is less than the value for the opens property then the hour range is assumed to span over the next day.
"""
type OpeningHoursSpecification implements Node{
    """name	Text 	The name of the item."""
    name: String

    """alternateName	Text 	An alias for the item."""
    alternateName: String

    """description	Text 	A description of the item."""
    description: String

    """closes	Time 	The closing hour of the place or service on the given day(s) of the week."""
    closes: DateTime

    """dayOfWeek	DayOfWeek 	The day of the week for which these opening hours are valid. 

    opens	Time 	The opening hour of the place or service on the given day(s) of the week."""
    opens: DateTime

    """validFrom	Date  or DateTime 	The date when the item becomes valid."""
    validFrom: DateTime

    """validThrough	Date  or DateTime 	The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours."""
    validThrough: DateTime

    """The id of the object."""
    id: ID!
}
#   """返回interface的http://localhost:8888/voyager会报错：
#   react-dom.min.js:117 TypeError: Cannot read property 'type' of undefined
#   所以想在voyager看关系图就屏蔽掉如下api，http://localhost:8888/graphiql就没有问题
#   """
# extend type Query {
#   allLocalBusiness(after: String, first: Int, before: String, last: Int): LocalBusinessConnection
#   localBusiness(id: ID, lbsID: ID): LocalBusiness

# }

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""https://schema.org/Thing The most generic type of item."""
interface Thing{
  """name	Text 	The name of the item."""
  name: String

  """【别名】 该项的别名。 An alias for the item."""
  alternateName: String

  """【描述】 该项的一个简单描述。 A description of the item."""
  description: String

  
}

"""【地方】广泛意义上的一个地方 Entities that have a somewhat fixed, physical extension."""
interface Place {
    """address	PostalAddress or Text or GeoShape or Organization or GeoCoordinates or Person or Place	
    【地址】 该项的物理地址。 Physical address of the item."""
    address: String
    """【包含在】 地点的包含关系 The basic containment relation between a place and one that contains it."""
    containedInPlace: Place
    """【包含】 地点的包含关系 The basic containment relation between a place and another that it contains."""
    containsPlaces:	[Place]	
    """【经纬度】 地理位置的坐标。 The geo coordinates of the place."""
    geo: GeoCoordinates
}

"""https://schema.org/LocalBusiness"""
interface LocalBusiness{
    """openingHours The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. """
    openingHours: String

    """paymentAccepted	Text 	Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc."""
    paymentAccepted: String

    """priceRange	Text 	The price range of the business, for example $$$."""
    priceRange: String

}


"""A connection to a list of items."""
type LocalBusinessConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [LocalBusiness]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  localBusiness: [LocalBusiness]
}

"""An edge in a connection."""
type LocalBusinessEdge {
  """The item at the end of the edge"""
  node: LocalBusiness

  """A cursor for use in pagination"""
  cursor: String!
}


input CustomAttributeInput {
  key: String!
  value: String
}

type CustomAttribute {
  key: String!
  value: String
}

enum CurrencyCode {
  AED
  AFN
  ALL
  AMD
  ANG
  AOA
  ARS
  AUD
  AWG
  AZN
  BAM
  BBD
  BDT
  BGN
  BHD
  BIF
  BMD
  BND
  BOB
  BRL
  BSD
  BTC
  BTN
  BWP
  BYR
  BZD
  CAD
  CDF
  CHF
  CLP
  CNY
  COP
  CRC
  CUC
  CUP
  CVE
  CZK
  DJF
  DKK
  DOP
  DZD
  EGP
  ERN
  ETB
  EUR
  FJD
  FKP
  GBP
  GEL
  GHS
  GIP
  GMD
  GNF
  GTQ
  GYD
  HKD
  HNL
  HRK
  HTG
  HUF
  IDR
  ILS
  INR
  IQD
  IRR
  ISK
  JMD
  JOD
  JPY
  KES
  KGS
  KHR
  KMF
  KPW
  KRW
  KWD
  KYD
  KZT
  LAK
  LBP
  LKR
  LRD
  LSL
  LYD
  MAD
  MDL
  MGA
  MKD
  MMK
  MNT
  MOP
  MRO
  MTL
  MUR
  MVR
  MWK
  MXN
  MYR
  MZN
  NAD
  NGN
  NIO
  NOK
  NPR
  NZD
  OMR
  PAB
  PEN
  PGK
  PHP
  PKR
  PLN
  PYG
  QAR
  RON
  RSD
  RUB
  RWF
  SAR
  SBD
  SCR
  SDD
  SDG
  SEK
  SGD
  SHP
  SLL
  SOS
  SRD
  STD
  SVC
  SYP
  SZL
  THB
  TJS
  TMT
  TND
  TOP
  TRY
  TTD
  TVD
  TWD
  TZS
  UAH
  UGX
  USD
  UYU
  UZS
  VEB
  VEF
  VND
  VUV
  WST
  XAF
  XCD
  XBT
  XOF
  XPF
  YER
  ZAR
  ZMW
  WON
}


# Format: "yyyy-MM-dd HH:mm:ss Z"
scalar DateTime
scalar BigDecimal
scalar URL
scalar Text
